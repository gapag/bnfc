// -*- Java -*- This ANTLRv4 file was machine-generated by BNFC
parser grammar LayoutParser;

@parser::members {

    boolean begin = true;
    LayoutLexer ll;

    static boolean checkIndentation(Token spaces, String indentation){
        /*if(spaces == null) return ll.indentation.length() == 0;
        else return spaces.getText().substring(1).length() >= ll.indentation.length();*/
        return true;
    }

    private void pr(String s){
      System.out.println(ll.indentation.toString()+s);
      System.out.flush();
    }

}

options {
  tokenVocab = LayoutLexer;
}

prog returns [ Layout.Absyn.Prog result ]
@init{
  ll = (LayoutLexer)this.getInputStream().getTokenSource();
}
: p_1_1=listStm { $result = new Layout.Absyn.Program($p_1_1.result); } # Program
;
stm returns [ Layout.Absyn.Stm result ] : {pr("ass");} p_1_1=IDENT {pr($p_1_1.getText());} Surrogate_id_SYMB_0  p_1_3=exp  { $result = new Layout.Absyn.Assign($p_1_1.getText(),$p_1_3.result); } # Assign
  | {pr("if"); } Surrogate_id_SYMB_3  p_2_2=exp {pr("(if's condition)");} Surrogate_id_SYMB_1 {pr(":");} p_2_4=indentedListStm  { $result = new Layout.Absyn.If($p_2_2.result,$p_2_4.result); } # If
;
exp returns [ Layout.Absyn.Exp result ] : Surrogate_id_SYMB_2  { pr("true"); $result = new Layout.Absyn.True(); } # True
;

indentedListStm returns [Layout.Absyn.ListStm result]:
      INDENTATION_INCREASED { ll.increaseIndentation(); pr("Indented list"); } p_2_1=stm
      p_2_2=listStm { $result = $p_2_2.result;
                      $result.addFirst($p_2_1.result); }
      INDENTATION_DECREASED{ll.decreaseIndentation();}# Indented_List;

listStm returns [ Layout.Absyn.ListStm result ]:

    INDENTATION p_2_1=stm
    p_2_2=listStm {pr("First");  $result = $p_2_2.result;
                    $result.addFirst($p_2_1.result); } # ListStm_PrependFirst // This is CONS (:)
   /*|
     INDENTATION p_1_1=stm  { pr("Last");
    $result = new Layout.Absyn.ListStm();
    $result.addLast($p_1_1.result);
    } # ListStm_AppendLast*/
   | {pr("Empty");$result = new Layout.Absyn.ListStm();} # ListStm_Empty // This is NIL ([])
;
